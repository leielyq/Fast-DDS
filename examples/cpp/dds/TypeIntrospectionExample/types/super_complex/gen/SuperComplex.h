// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SuperComplex.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_SUPERCOMPLEX_H_
#define _FAST_DDS_GENERATED_SUPERCOMPLEX_H_


#include <fastrtps/utils/fixed_size_string.hpp>

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SuperComplex_SOURCE)
#define SuperComplex_DllAPI __declspec( dllexport )
#else
#define SuperComplex_DllAPI __declspec( dllimport )
#endif // SuperComplex_SOURCE
#else
#define SuperComplex_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SuperComplex_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure InternalTimestamp_TypeIntrospectionExample defined by the user in the IDL file.
 * @ingroup SUPERCOMPLEX
 */
class InternalTimestamp_TypeIntrospectionExample
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InternalTimestamp_TypeIntrospectionExample();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InternalTimestamp_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample(
            const InternalTimestamp_TypeIntrospectionExample& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InternalTimestamp_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample(
            InternalTimestamp_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InternalTimestamp_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample& operator =(
            const InternalTimestamp_TypeIntrospectionExample& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InternalTimestamp_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample& operator =(
            InternalTimestamp_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InternalTimestamp_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InternalTimestamp_TypeIntrospectionExample& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InternalTimestamp_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InternalTimestamp_TypeIntrospectionExample& x) const;

    /*!
     * @brief This function sets a value in member seconds
     * @param _seconds New value for member seconds
     */
    eProsima_user_DllExport void seconds(
            int32_t _seconds);

    /*!
     * @brief This function returns the value of member seconds
     * @return Value of member seconds
     */
    eProsima_user_DllExport int32_t seconds() const;

    /*!
     * @brief This function returns a reference to member seconds
     * @return Reference to member seconds
     */
    eProsima_user_DllExport int32_t& seconds();

    /*!
     * @brief This function sets a value in member milliseconds
     * @param _milliseconds New value for member milliseconds
     */
    eProsima_user_DllExport void milliseconds(
            int32_t _milliseconds);

    /*!
     * @brief This function returns the value of member milliseconds
     * @return Value of member milliseconds
     */
    eProsima_user_DllExport int32_t milliseconds() const;

    /*!
     * @brief This function returns a reference to member milliseconds
     * @return Reference to member milliseconds
     */
    eProsima_user_DllExport int32_t& milliseconds();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InternalTimestamp_TypeIntrospectionExample& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int32_t m_seconds;
    int32_t m_milliseconds;
};
/*!
 * @brief This class represents the structure InternalPoints_TypeIntrospectionExample defined by the user in the IDL file.
 * @ingroup SUPERCOMPLEX
 */
class InternalPoints_TypeIntrospectionExample
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InternalPoints_TypeIntrospectionExample();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InternalPoints_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample(
            const InternalPoints_TypeIntrospectionExample& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InternalPoints_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample(
            InternalPoints_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InternalPoints_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample& operator =(
            const InternalPoints_TypeIntrospectionExample& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InternalPoints_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample& operator =(
            InternalPoints_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InternalPoints_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InternalPoints_TypeIntrospectionExample& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InternalPoints_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InternalPoints_TypeIntrospectionExample& x) const;

    /*!
     * @brief This function sets a value in member x_member
     * @param _x_member New value for member x_member
     */
    eProsima_user_DllExport void x_member(
            int32_t _x_member);

    /*!
     * @brief This function returns the value of member x_member
     * @return Value of member x_member
     */
    eProsima_user_DllExport int32_t x_member() const;

    /*!
     * @brief This function returns a reference to member x_member
     * @return Reference to member x_member
     */
    eProsima_user_DllExport int32_t& x_member();

    /*!
     * @brief This function sets a value in member y_member
     * @param _y_member New value for member y_member
     */
    eProsima_user_DllExport void y_member(
            int32_t _y_member);

    /*!
     * @brief This function returns the value of member y_member
     * @return Value of member y_member
     */
    eProsima_user_DllExport int32_t y_member() const;

    /*!
     * @brief This function returns a reference to member y_member
     * @return Reference to member y_member
     */
    eProsima_user_DllExport int32_t& y_member();

    /*!
     * @brief This function sets a value in member z_member
     * @param _z_member New value for member z_member
     */
    eProsima_user_DllExport void z_member(
            int32_t _z_member);

    /*!
     * @brief This function returns the value of member z_member
     * @return Value of member z_member
     */
    eProsima_user_DllExport int32_t z_member() const;

    /*!
     * @brief This function returns a reference to member z_member
     * @return Reference to member z_member
     */
    eProsima_user_DllExport int32_t& z_member();

    /*!
     * @brief This function copies the value in member t_member
     * @param _t_member New value to be copied in member t_member
     */
    eProsima_user_DllExport void t_member(
            const InternalTimestamp_TypeIntrospectionExample& _t_member);

    /*!
     * @brief This function moves the value in member t_member
     * @param _t_member New value to be moved in member t_member
     */
    eProsima_user_DllExport void t_member(
            InternalTimestamp_TypeIntrospectionExample&& _t_member);

    /*!
     * @brief This function returns a constant reference to member t_member
     * @return Constant reference to member t_member
     */
    eProsima_user_DllExport const InternalTimestamp_TypeIntrospectionExample& t_member() const;

    /*!
     * @brief This function returns a reference to member t_member
     * @return Reference to member t_member
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample& t_member();

    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InternalPoints_TypeIntrospectionExample& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int32_t m_x_member;
    int32_t m_y_member;
    int32_t m_z_member;
    InternalTimestamp_TypeIntrospectionExample m_t_member;
};
/*!
 * @brief This class represents the structure InternalMsgDescriptor_TypeIntrospectionExample defined by the user in the IDL file.
 * @ingroup SUPERCOMPLEX
 */
class InternalMsgDescriptor_TypeIntrospectionExample
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InternalMsgDescriptor_TypeIntrospectionExample();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InternalMsgDescriptor_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample(
            const InternalMsgDescriptor_TypeIntrospectionExample& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InternalMsgDescriptor_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample(
            InternalMsgDescriptor_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InternalMsgDescriptor_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample& operator =(
            const InternalMsgDescriptor_TypeIntrospectionExample& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InternalMsgDescriptor_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample& operator =(
            InternalMsgDescriptor_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InternalMsgDescriptor_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InternalMsgDescriptor_TypeIntrospectionExample& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InternalMsgDescriptor_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InternalMsgDescriptor_TypeIntrospectionExample& x) const;

    /*!
     * @brief This function sets a value in member id
     * @param _id New value for member id
     */
    eProsima_user_DllExport void id(
            uint32_t _id);

    /*!
     * @brief This function returns the value of member id
     * @return Value of member id
     */
    eProsima_user_DllExport uint32_t id() const;

    /*!
     * @brief This function returns a reference to member id
     * @return Reference to member id
     */
    eProsima_user_DllExport uint32_t& id();

    /*!
     * @brief This function copies the value in member topic
     * @param _topic New value to be copied in member topic
     */
    eProsima_user_DllExport void topic(
            const std::string& _topic);

    /*!
     * @brief This function moves the value in member topic
     * @param _topic New value to be moved in member topic
     */
    eProsima_user_DllExport void topic(
            std::string&& _topic);

    /*!
     * @brief This function returns a constant reference to member topic
     * @return Constant reference to member topic
     */
    eProsima_user_DllExport const std::string& topic() const;

    /*!
     * @brief This function returns a reference to member topic
     * @return Reference to member topic
     */
    eProsima_user_DllExport std::string& topic();
    /*!
     * @brief This function copies the value in member timestamp
     * @param _timestamp New value to be copied in member timestamp
     */
    eProsima_user_DllExport void timestamp(
            const InternalTimestamp_TypeIntrospectionExample& _timestamp);

    /*!
     * @brief This function moves the value in member timestamp
     * @param _timestamp New value to be moved in member timestamp
     */
    eProsima_user_DllExport void timestamp(
            InternalTimestamp_TypeIntrospectionExample&& _timestamp);

    /*!
     * @brief This function returns a constant reference to member timestamp
     * @return Constant reference to member timestamp
     */
    eProsima_user_DllExport const InternalTimestamp_TypeIntrospectionExample& timestamp() const;

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport InternalTimestamp_TypeIntrospectionExample& timestamp();

    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InternalMsgDescriptor_TypeIntrospectionExample& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint32_t m_id;
    std::string m_topic;
    InternalTimestamp_TypeIntrospectionExample m_timestamp;
};
/*!
 * @brief This class represents the structure InternalMessage_TypeIntrospectionExample defined by the user in the IDL file.
 * @ingroup SUPERCOMPLEX
 */
class InternalMessage_TypeIntrospectionExample
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InternalMessage_TypeIntrospectionExample();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InternalMessage_TypeIntrospectionExample();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InternalMessage_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMessage_TypeIntrospectionExample(
            const InternalMessage_TypeIntrospectionExample& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InternalMessage_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMessage_TypeIntrospectionExample(
            InternalMessage_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InternalMessage_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMessage_TypeIntrospectionExample& operator =(
            const InternalMessage_TypeIntrospectionExample& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InternalMessage_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport InternalMessage_TypeIntrospectionExample& operator =(
            InternalMessage_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InternalMessage_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InternalMessage_TypeIntrospectionExample& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InternalMessage_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InternalMessage_TypeIntrospectionExample& x) const;

    /*!
     * @brief This function copies the value in member descriptor
     * @param _descriptor New value to be copied in member descriptor
     */
    eProsima_user_DllExport void descriptor(
            const InternalMsgDescriptor_TypeIntrospectionExample& _descriptor);

    /*!
     * @brief This function moves the value in member descriptor
     * @param _descriptor New value to be moved in member descriptor
     */
    eProsima_user_DllExport void descriptor(
            InternalMsgDescriptor_TypeIntrospectionExample&& _descriptor);

    /*!
     * @brief This function returns a constant reference to member descriptor
     * @return Constant reference to member descriptor
     */
    eProsima_user_DllExport const InternalMsgDescriptor_TypeIntrospectionExample& descriptor() const;

    /*!
     * @brief This function returns a reference to member descriptor
     * @return Reference to member descriptor
     */
    eProsima_user_DllExport InternalMsgDescriptor_TypeIntrospectionExample& descriptor();
    /*!
     * @brief This function copies the value in member message
     * @param _message New value to be copied in member message
     */
    eProsima_user_DllExport void message(
            const std::string& _message);

    /*!
     * @brief This function moves the value in member message
     * @param _message New value to be moved in member message
     */
    eProsima_user_DllExport void message(
            std::string&& _message);

    /*!
     * @brief This function returns a constant reference to member message
     * @return Constant reference to member message
     */
    eProsima_user_DllExport const std::string& message() const;

    /*!
     * @brief This function returns a reference to member message
     * @return Reference to member message
     */
    eProsima_user_DllExport std::string& message();
    /*!
     * @brief This function copies the value in member timestamps
     * @param _timestamps New value to be copied in member timestamps
     */
    eProsima_user_DllExport void timestamps(
            const std::array<InternalTimestamp_TypeIntrospectionExample, 2>& _timestamps);

    /*!
     * @brief This function moves the value in member timestamps
     * @param _timestamps New value to be moved in member timestamps
     */
    eProsima_user_DllExport void timestamps(
            std::array<InternalTimestamp_TypeIntrospectionExample, 2>&& _timestamps);

    /*!
     * @brief This function returns a constant reference to member timestamps
     * @return Constant reference to member timestamps
     */
    eProsima_user_DllExport const std::array<InternalTimestamp_TypeIntrospectionExample, 2>& timestamps() const;

    /*!
     * @brief This function returns a reference to member timestamps
     * @return Reference to member timestamps
     */
    eProsima_user_DllExport std::array<InternalTimestamp_TypeIntrospectionExample, 2>& timestamps();

    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InternalMessage_TypeIntrospectionExample& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    InternalMsgDescriptor_TypeIntrospectionExample m_descriptor;
    std::string m_message;
    std::array<InternalTimestamp_TypeIntrospectionExample, 2> m_timestamps;
};
/*!
 * @brief This class represents the structure SuperComplex_TypeIntrospectionExample defined by the user in the IDL file.
 * @ingroup SUPERCOMPLEX
 */
class SuperComplex_TypeIntrospectionExample
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SuperComplex_TypeIntrospectionExample();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SuperComplex_TypeIntrospectionExample();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object SuperComplex_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport SuperComplex_TypeIntrospectionExample(
            const SuperComplex_TypeIntrospectionExample& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object SuperComplex_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport SuperComplex_TypeIntrospectionExample(
            SuperComplex_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object SuperComplex_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport SuperComplex_TypeIntrospectionExample& operator =(
            const SuperComplex_TypeIntrospectionExample& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object SuperComplex_TypeIntrospectionExample that will be copied.
     */
    eProsima_user_DllExport SuperComplex_TypeIntrospectionExample& operator =(
            SuperComplex_TypeIntrospectionExample&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x SuperComplex_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SuperComplex_TypeIntrospectionExample& x) const;

    /*!
     * @brief Comparison operator.
     * @param x SuperComplex_TypeIntrospectionExample object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SuperComplex_TypeIntrospectionExample& x) const;

    /*!
     * @brief This function sets a value in member index
     * @param _index New value for member index
     */
    eProsima_user_DllExport void index(
            uint32_t _index);

    /*!
     * @brief This function returns the value of member index
     * @return Value of member index
     */
    eProsima_user_DllExport uint32_t index() const;

    /*!
     * @brief This function returns a reference to member index
     * @return Reference to member index
     */
    eProsima_user_DllExport uint32_t& index();

    /*!
     * @brief This function copies the value in member main_point
     * @param _main_point New value to be copied in member main_point
     */
    eProsima_user_DllExport void main_point(
            const InternalPoints_TypeIntrospectionExample& _main_point);

    /*!
     * @brief This function moves the value in member main_point
     * @param _main_point New value to be moved in member main_point
     */
    eProsima_user_DllExport void main_point(
            InternalPoints_TypeIntrospectionExample&& _main_point);

    /*!
     * @brief This function returns a constant reference to member main_point
     * @return Constant reference to member main_point
     */
    eProsima_user_DllExport const InternalPoints_TypeIntrospectionExample& main_point() const;

    /*!
     * @brief This function returns a reference to member main_point
     * @return Reference to member main_point
     */
    eProsima_user_DllExport InternalPoints_TypeIntrospectionExample& main_point();
    /*!
     * @brief This function copies the value in member internal_data
     * @param _internal_data New value to be copied in member internal_data
     */
    eProsima_user_DllExport void internal_data(
            const std::vector<InternalPoints_TypeIntrospectionExample>& _internal_data);

    /*!
     * @brief This function moves the value in member internal_data
     * @param _internal_data New value to be moved in member internal_data
     */
    eProsima_user_DllExport void internal_data(
            std::vector<InternalPoints_TypeIntrospectionExample>&& _internal_data);

    /*!
     * @brief This function returns a constant reference to member internal_data
     * @return Constant reference to member internal_data
     */
    eProsima_user_DllExport const std::vector<InternalPoints_TypeIntrospectionExample>& internal_data() const;

    /*!
     * @brief This function returns a reference to member internal_data
     * @return Reference to member internal_data
     */
    eProsima_user_DllExport std::vector<InternalPoints_TypeIntrospectionExample>& internal_data();
    /*!
     * @brief This function copies the value in member internal_data_bounded
     * @param _internal_data_bounded New value to be copied in member internal_data_bounded
     */
    eProsima_user_DllExport void internal_data_bounded(
            const std::vector<InternalPoints_TypeIntrospectionExample>& _internal_data_bounded);

    /*!
     * @brief This function moves the value in member internal_data_bounded
     * @param _internal_data_bounded New value to be moved in member internal_data_bounded
     */
    eProsima_user_DllExport void internal_data_bounded(
            std::vector<InternalPoints_TypeIntrospectionExample>&& _internal_data_bounded);

    /*!
     * @brief This function returns a constant reference to member internal_data_bounded
     * @return Constant reference to member internal_data_bounded
     */
    eProsima_user_DllExport const std::vector<InternalPoints_TypeIntrospectionExample>& internal_data_bounded() const;

    /*!
     * @brief This function returns a reference to member internal_data_bounded
     * @return Reference to member internal_data_bounded
     */
    eProsima_user_DllExport std::vector<InternalPoints_TypeIntrospectionExample>& internal_data_bounded();
    /*!
     * @brief This function copies the value in member messages
     * @param _messages New value to be copied in member messages
     */
    eProsima_user_DllExport void messages(
            const std::array<InternalMessage_TypeIntrospectionExample, 2>& _messages);

    /*!
     * @brief This function moves the value in member messages
     * @param _messages New value to be moved in member messages
     */
    eProsima_user_DllExport void messages(
            std::array<InternalMessage_TypeIntrospectionExample, 2>&& _messages);

    /*!
     * @brief This function returns a constant reference to member messages
     * @return Constant reference to member messages
     */
    eProsima_user_DllExport const std::array<InternalMessage_TypeIntrospectionExample, 2>& messages() const;

    /*!
     * @brief This function returns a reference to member messages
     * @return Reference to member messages
     */
    eProsima_user_DllExport std::array<InternalMessage_TypeIntrospectionExample, 2>& messages();

    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const SuperComplex_TypeIntrospectionExample& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint32_t m_index;
    InternalPoints_TypeIntrospectionExample m_main_point;
    std::vector<InternalPoints_TypeIntrospectionExample> m_internal_data;
    std::vector<InternalPoints_TypeIntrospectionExample> m_internal_data_bounded;
    std::array<InternalMessage_TypeIntrospectionExample, 2> m_messages;
};

#endif // _FAST_DDS_GENERATED_SUPERCOMPLEX_H_